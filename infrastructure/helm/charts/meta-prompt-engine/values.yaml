# Default values for meta-prompt-engine
# Enterprise-grade configuration with security, observability, and scalability

replicaCount: 3

image:
  registry: ghcr.io
  repository: quantumlayer-dev/meta-prompt-engine
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets:
  - name: ghcr-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9090"
  prometheus.io/path: "/metrics"
  sidecar.istio.io/inject: "true"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  fsGroup: 65532
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-west-2:123456789012:certificate/12345678-1234-1234-1234-123456789012"

ingress:
  enabled: false
  className: "istio"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
  hosts:
    - host: meta-prompt.quantumlayer.io
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: meta-prompt-tls
      hosts:
        - meta-prompt.quantumlayer.io

resources:
  limits:
    cpu: 2000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 512Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /ready
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

startupProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 30

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - meta-prompt-engine
          topologyKey: kubernetes.io/hostname

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Network Policy
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: istio-system
        - namespaceSelector:
            matchLabels:
              name: quantumlayer
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: quantumlayer
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 53
        - protocol: UDP
          port: 53

# Service Monitor for Prometheus
serviceMonitor:
  enabled: true
  interval: 30s
  path: /metrics
  labels:
    release: prometheus

# Configuration
config:
  logLevel: info
  server:
    port: 8080
    metricsPort: 9090
    gracefulShutdownTimeout: 30s
  
  llm:
    defaultProvider: "aws-bedrock"
    timeout: 60s
    maxRetries: 3
    
  redis:
    enabled: true
    host: redis-master.quantumlayer.svc.cluster.local
    port: 6379
    db: 1
    
  postgres:
    host: postgres-rw.quantumlayer.svc.cluster.local
    port: 5432
    database: quantumlayer
    sslMode: require
    maxConnections: 100
    
  tracing:
    enabled: true
    endpoint: jaeger-collector.istio-system.svc.cluster.local:14268
    samplingRate: 0.1
    
  audit:
    enabled: true
    logPath: /var/log/audit
    
# Secrets (use external secrets in production)
secrets:
  create: false
  externalSecret:
    enabled: true
    backend: vault
    path: secret/data/quantumlayer/meta-prompt-engine

# Dependencies
postgresql:
  enabled: false  # Using external PostgreSQL

redis:
  enabled: false  # Using external Redis

# Backup configuration
backup:
  enabled: true
  schedule: "0 2 * * *"
  retention: 30

# Monitoring dashboards
grafana:
  dashboards:
    enabled: true
    labels:
      grafana_dashboard: "1"