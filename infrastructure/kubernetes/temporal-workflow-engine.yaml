# Temporal Workflow Engine - Fixed Configuration
# Includes database initialization and proper setup
apiVersion: v1
kind: ConfigMap
metadata:
  name: temporal-sql-scripts
  namespace: quantumlayer
data:
  setup.sql: |
    -- Create temporal database if not exists
    SELECT 'CREATE DATABASE temporal' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'temporal')\gexec
    SELECT 'CREATE DATABASE temporal_visibility' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'temporal_visibility')\gexec
    
---
apiVersion: batch/v1
kind: Job
metadata:
  name: temporal-db-setup
  namespace: quantumlayer
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: temporal-admin-tools
        image: temporalio/admin-tools:1.22.4
        command: ["/bin/bash", "-c"]
        args:
          - |
            echo "Setting up Temporal database schema..."
            
            # Wait for PostgreSQL to be ready
            until nc -z postgres-cluster-rw.quantumlayer.svc.cluster.local 5432; do
              echo "Waiting for PostgreSQL..."
              sleep 2
            done
            
            # Setup default store schema
            temporal-sql-tool \
              --plugin postgres \
              --endpoint postgres-cluster-rw.quantumlayer.svc.cluster.local \
              --port 5432 \
              --user qlayer \
              --password QuantumLayer2024! \
              --database temporal \
              create-database
            
            temporal-sql-tool \
              --plugin postgres \
              --endpoint postgres-cluster-rw.quantumlayer.svc.cluster.local \
              --port 5432 \
              --user qlayer \
              --password QuantumLayer2024! \
              --database temporal \
              setup-schema -v 0.0
            
            temporal-sql-tool \
              --plugin postgres \
              --endpoint postgres-cluster-rw.quantumlayer.svc.cluster.local \
              --port 5432 \
              --user qlayer \
              --password QuantumLayer2024! \
              --database temporal \
              update-schema -d /etc/temporal/schema/postgresql/v96/temporal/versioned
            
            # Setup visibility store schema
            temporal-sql-tool \
              --plugin postgres \
              --endpoint postgres-cluster-rw.quantumlayer.svc.cluster.local \
              --port 5432 \
              --user qlayer \
              --password QuantumLayer2024! \
              --database temporal_visibility \
              create-database
            
            temporal-sql-tool \
              --plugin postgres \
              --endpoint postgres-cluster-rw.quantumlayer.svc.cluster.local \
              --port 5432 \
              --user qlayer \
              --password QuantumLayer2024! \
              --database temporal_visibility \
              setup-schema -v 0.0
            
            temporal-sql-tool \
              --plugin postgres \
              --endpoint postgres-cluster-rw.quantumlayer.svc.cluster.local \
              --port 5432 \
              --user qlayer \
              --password QuantumLayer2024! \
              --database temporal_visibility \
              update-schema -d /etc/temporal/schema/postgresql/v96/visibility/versioned
            
            echo "Temporal database setup completed!"
            
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: temporal-config
  namespace: quantumlayer
data:
  config.yaml: |
    persistence:
      defaultStore: default
      visibilityStore: visibility
      numHistoryShards: 512
      datastores:
        default:
          sql:
            pluginName: "postgres"
            databaseName: "temporal"
            connectAddr: "postgres-cluster-rw.quantumlayer.svc.cluster.local:5432"
            connectProtocol: "tcp"
            user: "qlayer"
            password: "QuantumLayer2024!"
            maxConns: 20
            maxIdleConns: 20
            maxConnLifetime: "1h"
        visibility:
          sql:
            pluginName: "postgres"
            databaseName: "temporal_visibility"
            connectAddr: "postgres-cluster-rw.quantumlayer.svc.cluster.local:5432"
            connectProtocol: "tcp"
            user: "qlayer"
            password: "QuantumLayer2024!"
            maxConns: 10
            maxIdleConns: 10
            maxConnLifetime: "1h"
    
    global:
      membership:
        maxJoinDuration: 30s
      pprof:
        port: 7936
      metrics:
        prometheus:
          timerType: "histogram"
          listenAddress: "0.0.0.0:9090"
    
    services:
      frontend:
        rpc:
          grpcPort: 7233
          membershipPort: 6933
          bindOnLocalHost: false
      matching:
        rpc:
          grpcPort: 7235
          membershipPort: 6935
          bindOnLocalHost: false
      history:
        rpc:
          grpcPort: 7234
          membershipPort: 6934
          bindOnLocalHost: false
      worker:
        rpc:
          grpcPort: 7239
          membershipPort: 6939
          bindOnLocalHost: false
    
    clusterMetadata:
      enableGlobalNamespace: false
      failoverVersionIncrement: 10
      masterClusterName: "active"
      currentClusterName: "active"
      clusterInformation:
        active:
          enabled: true
          initialFailoverVersion: 1
          rpcName: "frontend"
          rpcAddress: "localhost:7233"
    
    dcRedirectionPolicy:
      policy: "noop"
      toDC: ""
    
    archival:
      history:
        state: "disabled"
      visibility:
        state: "disabled"
    
    publicClient:
      hostPort: "temporal-frontend:7233"
    
    dynamicConfigClient:
      filepath: "/etc/temporal/dynamicconfig/dynamicconfig.yaml"
      pollInterval: "10s"
      
  dynamicconfig.yaml: |
    frontend.enableClientVersionCheck:
      - value: true
    history.persistenceMaxQPS:
      - value: 3000
    frontend.persistenceMaxQPS:
      - value: 3000
    frontend.historyMgrNumConns:
      - value: 10
    frontend.throttledLogRPS:
      - value: 20
    history.historyMgrNumConns:
      - value: 50
    system.advancedVisibilityWritingMode:
      - value: "on"
      
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal-frontend
  namespace: quantumlayer
  labels:
    app: temporal
    component: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: temporal
      component: frontend
  template:
    metadata:
      labels:
        app: temporal
        component: frontend
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: temporal-frontend
        image: temporalio/server:1.22.4
        env:
        - name: SERVICES
          value: frontend
        - name: TEMPORAL_CONFIG_DIR
          value: /etc/temporal/config
        - name: DYNAMIC_CONFIG_FILE_PATH
          value: /etc/temporal/dynamicconfig/dynamicconfig.yaml
        ports:
        - containerPort: 7233
          name: grpc
        - containerPort: 6933
          name: membership
        - containerPort: 9090
          name: metrics
        volumeMounts:
        - name: config
          mountPath: /etc/temporal/config
        - name: dynamicconfig
          mountPath: /etc/temporal/dynamicconfig
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          tcpSocket:
            port: 7233
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          tcpSocket:
            port: 7233
      volumes:
      - name: config
        configMap:
          name: temporal-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: dynamicconfig
        configMap:
          name: temporal-config
          items:
          - key: dynamicconfig.yaml
            path: dynamicconfig.yaml
            
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal-history
  namespace: quantumlayer
  labels:
    app: temporal
    component: history
spec:
  replicas: 1
  selector:
    matchLabels:
      app: temporal
      component: history
  template:
    metadata:
      labels:
        app: temporal
        component: history
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: temporal-history
        image: temporalio/server:1.22.4
        env:
        - name: SERVICES
          value: history
        - name: TEMPORAL_CONFIG_DIR
          value: /etc/temporal/config
        - name: DYNAMIC_CONFIG_FILE_PATH
          value: /etc/temporal/dynamicconfig/dynamicconfig.yaml
        ports:
        - containerPort: 7234
          name: grpc
        - containerPort: 6934
          name: membership
        - containerPort: 9090
          name: metrics
        volumeMounts:
        - name: config
          mountPath: /etc/temporal/config
        - name: dynamicconfig
          mountPath: /etc/temporal/dynamicconfig
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          tcpSocket:
            port: 7234
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          tcpSocket:
            port: 7234
      volumes:
      - name: config
        configMap:
          name: temporal-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: dynamicconfig
        configMap:
          name: temporal-config
          items:
          - key: dynamicconfig.yaml
            path: dynamicconfig.yaml
            
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal-matching
  namespace: quantumlayer
  labels:
    app: temporal
    component: matching
spec:
  replicas: 1
  selector:
    matchLabels:
      app: temporal
      component: matching
  template:
    metadata:
      labels:
        app: temporal
        component: matching
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: temporal-matching
        image: temporalio/server:1.22.4
        env:
        - name: SERVICES
          value: matching
        - name: TEMPORAL_CONFIG_DIR
          value: /etc/temporal/config
        - name: DYNAMIC_CONFIG_FILE_PATH
          value: /etc/temporal/dynamicconfig/dynamicconfig.yaml
        ports:
        - containerPort: 7235
          name: grpc
        - containerPort: 6935
          name: membership
        - containerPort: 9090
          name: metrics
        volumeMounts:
        - name: config
          mountPath: /etc/temporal/config
        - name: dynamicconfig
          mountPath: /etc/temporal/dynamicconfig
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          tcpSocket:
            port: 7235
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          tcpSocket:
            port: 7235
      volumes:
      - name: config
        configMap:
          name: temporal-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: dynamicconfig
        configMap:
          name: temporal-config
          items:
          - key: dynamicconfig.yaml
            path: dynamicconfig.yaml
            
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal-worker
  namespace: quantumlayer
  labels:
    app: temporal
    component: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: temporal
      component: worker
  template:
    metadata:
      labels:
        app: temporal
        component: worker
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: temporal-worker
        image: temporalio/server:1.22.4
        env:
        - name: SERVICES
          value: worker
        - name: TEMPORAL_CONFIG_DIR
          value: /etc/temporal/config
        - name: DYNAMIC_CONFIG_FILE_PATH
          value: /etc/temporal/dynamicconfig/dynamicconfig.yaml
        ports:
        - containerPort: 7239
          name: grpc
        - containerPort: 6939
          name: membership
        - containerPort: 9090
          name: metrics
        volumeMounts:
        - name: config
          mountPath: /etc/temporal/config
        - name: dynamicconfig
          mountPath: /etc/temporal/dynamicconfig
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          tcpSocket:
            port: 7239
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          tcpSocket:
            port: 7239
      volumes:
      - name: config
        configMap:
          name: temporal-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: dynamicconfig
        configMap:
          name: temporal-config
          items:
          - key: dynamicconfig.yaml
            path: dynamicconfig.yaml
            
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal-ui
  namespace: quantumlayer
  labels:
    app: temporal
    component: ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: temporal
      component: ui
  template:
    metadata:
      labels:
        app: temporal
        component: ui
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - name: temporal-ui
        image: temporalio/ui:2.21.3
        env:
        - name: TEMPORAL_ADDRESS
          value: temporal-frontend:7233
        - name: TEMPORAL_CORS_ORIGINS
          value: "*"
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          
---
apiVersion: v1
kind: Service
metadata:
  name: temporal-frontend
  namespace: quantumlayer
  labels:
    app: temporal
    component: frontend
spec:
  type: ClusterIP
  ports:
  - name: grpc
    port: 7233
    targetPort: 7233
  - name: metrics
    port: 9090
    targetPort: 9090
  selector:
    app: temporal
    component: frontend
    
---
apiVersion: v1
kind: Service
metadata:
  name: temporal-history
  namespace: quantumlayer
  labels:
    app: temporal
    component: history
spec:
  type: ClusterIP
  ports:
  - name: grpc
    port: 7234
    targetPort: 7234
  - name: metrics
    port: 9091
    targetPort: 9090
  selector:
    app: temporal
    component: history
    
---
apiVersion: v1
kind: Service
metadata:
  name: temporal-matching
  namespace: quantumlayer
  labels:
    app: temporal
    component: matching
spec:
  type: ClusterIP
  ports:
  - name: grpc
    port: 7235
    targetPort: 7235
  - name: metrics
    port: 9092
    targetPort: 9090
  selector:
    app: temporal
    component: matching
    
---
apiVersion: v1
kind: Service
metadata:
  name: temporal-worker
  namespace: quantumlayer
  labels:
    app: temporal
    component: worker
spec:
  type: ClusterIP
  ports:
  - name: grpc
    port: 7239
    targetPort: 7239
  - name: metrics
    port: 9093
    targetPort: 9090
  selector:
    app: temporal
    component: worker
    
---
apiVersion: v1
kind: Service
metadata:
  name: temporal-ui
  namespace: quantumlayer
  labels:
    app: temporal
    component: ui
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: temporal
    component: ui
    
---
apiVersion: v1
kind: Service
metadata:
  name: temporal-ui-nodeport
  namespace: quantumlayer
  labels:
    app: temporal
    component: ui
spec:
  type: NodePort
  ports:
  - name: http
    port: 80
    targetPort: 8080
    nodePort: 30888
  selector:
    app: temporal
    component: ui