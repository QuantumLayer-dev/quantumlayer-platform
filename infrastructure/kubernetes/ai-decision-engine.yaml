apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-decision-engine
  namespace: quantumlayer
  labels:
    app: ai-decision-engine
    component: ai-core
    version: ai-native-v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-decision-engine
  template:
    metadata:
      labels:
        app: ai-decision-engine
        component: ai-core
        version: ai-native-v1
    spec:
      containers:
      - name: ai-decision-engine
        image: ghcr.io/quantumlayer-dev/ai-decision-engine:ai-native-v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8095
          name: http
        env:
        - name: PORT
          value: "8095"
        - name: EMBEDDING_SERVICE_URL
          value: "http://embedding-service:8097"
        - name: LLM_ROUTER_URL
          value: "http://llm-router:8080"
        - name: VECTOR_DB_URL
          value: "http://qdrant:6333"
        - name: REDIS_URL
          value: "redis-master:6379"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8095
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8095
          initialDelaySeconds: 10
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: ai-decision-engine
  namespace: quantumlayer
  labels:
    app: ai-decision-engine
spec:
  type: ClusterIP
  selector:
    app: ai-decision-engine
  ports:
  - port: 8095
    targetPort: 8095
    protocol: TCP
    name: http

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-decision-rules
  namespace: quantumlayer
data:
  rules.yaml: |
    categories:
      - name: language_selection
        rules:
          - pattern: ".*python.*api.*"
            decision: "python"
            metadata:
              framework: "fastapi"
          - pattern: ".*typescript.*react.*"
            decision: "typescript"
            metadata:
              framework: "nextjs"
          - pattern: ".*microservice.*high.?performance.*"
            decision: "go"
            metadata:
              framework: "gin"
      - name: agent_selection
        rules:
          - pattern: ".*security.*threat.*"
            decision: "security-architect"
          - pattern: ".*frontend.*ui.*"
            decision: "frontend-developer"
          - pattern: ".*infrastructure.*devops.*"
            decision: "devops-engineer"
      - name: framework_selection
        rules:
          - pattern: ".*rest.*api.*fast.*"
            decision: "fastapi"
          - pattern: ".*enterprise.*java.*"
            decision: "spring-boot"
          - pattern: ".*real.?time.*websocket.*"
            decision: "nodejs"