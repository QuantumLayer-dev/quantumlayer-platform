apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-orchestrator-config
  namespace: quantumlayer
data:
  LLM_ENDPOINT: "http://llm-router.quantumlayer.svc.cluster.local:8080"
  NATS_URL: "nats://nats.quantumlayer.svc.cluster.local:4222"
  LOG_LEVEL: "info"
---
apiVersion: v1
kind: Service
metadata:
  name: agent-orchestrator-new
  namespace: quantumlayer
  labels:
    app: agent-orchestrator-new
    version: v2
spec:
  type: ClusterIP
  selector:
    app: agent-orchestrator-new
  ports:
    - port: 8080
      targetPort: 8080
      name: http
---
apiVersion: v1
kind: Service
metadata:
  name: agent-orchestrator-new-nodeport
  namespace: quantumlayer
spec:
  type: NodePort
  selector:
    app: agent-orchestrator-new
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30887
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-orchestrator-new
  namespace: quantumlayer
  labels:
    app: agent-orchestrator-new
    version: v2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agent-orchestrator-new
  template:
    metadata:
      labels:
        app: agent-orchestrator-new
        version: v2
        sidecar.istio.io/inject: "true"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: default
      containers:
      - name: agent-orchestrator
        image: ghcr.io/quantumlayer-dev/agent-orchestrator:v2
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PORT
          value: "8080"
        - name: LLM_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: agent-orchestrator-config
              key: LLM_ENDPOINT
        - name: NATS_URL
          valueFrom:
            configMapKeyRef:
              name: agent-orchestrator-config
              key: NATS_URL
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: agent-orchestrator-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: agent-orchestrator-new-hpa
  namespace: quantumlayer
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: agent-orchestrator-new
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: agent-orchestrator-new-pdb
  namespace: quantumlayer
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: agent-orchestrator-new