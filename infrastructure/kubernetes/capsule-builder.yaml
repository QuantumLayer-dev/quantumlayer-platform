apiVersion: apps/v1
kind: Deployment
metadata:
  name: capsule-builder
  namespace: quantumlayer
  labels:
    app: capsule-builder
    component: builder
spec:
  replicas: 1
  selector:
    matchLabels:
      app: capsule-builder
  template:
    metadata:
      labels:
        app: capsule-builder
        component: builder
    spec:
      serviceAccountName: capsule-builder
      imagePullSecrets:
        - name: ghcr-secret
      securityContext:
        fsGroup: 1000
      containers:
      - name: capsule-builder
        image: ghcr.io/quantumlayer-dev/capsule-builder:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8086
          name: http
        env:
        - name: PORT
          value: "8086"
        - name: NODE_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: BUILDER_TIMEOUT
          value: "300000"
        - name: MAX_CONCURRENT_BUILDS
          value: "5"
        - name: WORKSPACE_PATH
          value: "/workspace"
        - name: CACHE_PATH
          value: "/cache"
        - name: QUANTUM_DROPS_URL
          value: "http://quantum-drops.quantumlayer.svc.cluster.local:8080"
        - name: WORKFLOW_API_URL
          value: "http://workflow-api.temporal.svc.cluster.local:8080"
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8086
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8086
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: workspace
          mountPath: /workspace
        - name: cache
          mountPath: /cache
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: workspace
        emptyDir:
          sizeLimit: 5Gi
      - name: cache
        emptyDir:
          sizeLimit: 2Gi
      - name: tmp
        emptyDir:
          sizeLimit: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: capsule-builder
  namespace: quantumlayer
  labels:
    app: capsule-builder
spec:
  selector:
    app: capsule-builder
  ports:
  - port: 8086
    targetPort: 8086
    nodePort: 30886
    name: http
  type: NodePort

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: capsule-builder
  namespace: quantumlayer

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: capsule-builder
  namespace: quantumlayer
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "pods/exec"]
  verbs: ["get", "list", "create", "delete", "watch"]
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "create", "delete", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: capsule-builder
  namespace: quantumlayer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capsule-builder
subjects:
- kind: ServiceAccount
  name: capsule-builder
  namespace: quantumlayer

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: capsule-builder-network-policy
  namespace: quantumlayer
spec:
  podSelector:
    matchLabels:
      app: capsule-builder
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: quantumlayer
    - namespaceSelector:
        matchLabels:
          name: temporal
    ports:
    - protocol: TCP
      port: 8086
  egress:
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
  - to:
    - namespaceSelector:
        matchLabels:
          name: quantumlayer
    ports:
    - protocol: TCP
      port: 8080  # Quantum Drops
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
  - to:
    - namespaceSelector:
        matchLabels:
          name: temporal
    ports:
    - protocol: TCP
      port: 8080  # Workflow API
    - protocol: TCP
      port: 7233  # Temporal frontend