# Temporal Helm Chart Values for QuantumLayer V2
# Enterprise Production Configuration with External PostgreSQL

# Disable all embedded datastores
cassandra:
  enabled: false

mysql:
  enabled: false

postgresql:
  enabled: false

elasticsearch:
  enabled: false

prometheus:
  enabled: false

grafana:
  enabled: false

# Server configuration
server:
  enabled: true
  replicaCount: 1
  image:
    repository: temporalio/server
    tag: 1.22.4
    pullPolicy: IfNotPresent
  
  config:
    logLevel: "info"
    numHistoryShards: 512
    
    persistence:
      defaultStore: default
      default:
        driver: "sql"
        sql:
          driver: "postgres12"
          host: "postgres-cluster-rw.quantumlayer.svc.cluster.local"
          port: 5432
          database: "temporal"
          user: "qlayer"
          password: "QuantumLayer2024!"
          maxConns: 20
          maxIdleConns: 20
          maxConnLifetime: "1h"
        cassandra:
          hosts: ["dummy"]  # Required but not used
          port: 9042
      
      visibility:
        driver: "sql"
        sql:
          driver: "postgres12"
          host: "postgres-cluster-rw.quantumlayer.svc.cluster.local"
          port: 5432
          database: "temporal_visibility"
          user: "qlayer"
          password: "QuantumLayer2024!"
          maxConns: 10
          maxIdleConns: 10
          maxConnLifetime: "1h"
        cassandra:
          hosts: ["dummy"]  # Required but not used
          port: 9042
  
  frontend:
    replicaCount: 2
    service:
      type: ClusterIP
      port: 7233
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    podAnnotations:
      sidecar.istio.io/inject: "true"
      prometheus.io/scrape: "true"
      prometheus.io/port: "9090"
    metrics:
      annotations:
        enabled: true
      serviceMonitor:
        enabled: false
  
  history:
    replicaCount: 2
    resources:
      requests:
        memory: "512Mi"
        cpu: "200m"
      limits:
        memory: "1Gi"
        cpu: "1000m"
    podAnnotations:
      sidecar.istio.io/inject: "true"
      prometheus.io/scrape: "true"
  
  matching:
    replicaCount: 2
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    podAnnotations:
      sidecar.istio.io/inject: "true"
      prometheus.io/scrape: "true"
  
  worker:
    replicaCount: 2
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "500m"
    podAnnotations:
      sidecar.istio.io/inject: "true"
      prometheus.io/scrape: "true"

# Web UI configuration
web:
  enabled: true
  replicaCount: 1
  image:
    repository: temporalio/ui
    tag: 2.21.3
    pullPolicy: IfNotPresent
  service:
    type: NodePort
    port: 8080
    nodePort: 30888
    annotations: {}
  ingress:
    enabled: false
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  podAnnotations:
    sidecar.istio.io/inject: "true"

# Admin tools for schema management
admintools:
  enabled: true
  image:
    repository: temporalio/admin-tools
    tag: 1.22.4
    pullPolicy: IfNotPresent

# Schema setup configuration
schema:
  setup:
    enabled: true
    backoffLimit: 100
  update:
    enabled: true
    backoffLimit: 100

# ServiceAccount configuration
serviceAccount:
  create: true
  name: temporal
  extraAnnotations:
    sidecar.istio.io/inject: "true"

# Additional labels for all resources
additionalLabels:
  app.kubernetes.io/part-of: quantumlayer
  app.kubernetes.io/managed-by: helm

# Debug mode
debug: false