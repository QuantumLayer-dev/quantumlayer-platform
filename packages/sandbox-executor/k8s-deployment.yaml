apiVersion: apps/v1
kind: Deployment
metadata:
  name: sandbox-executor
  namespace: quantumlayer
  labels:
    app: sandbox-executor
    component: execution
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sandbox-executor
  template:
    metadata:
      labels:
        app: sandbox-executor
        component: execution
    spec:
      serviceAccountName: sandbox-executor
      securityContext:
        fsGroup: 1000
      containers:
      - name: sandbox-executor
        image: quantumlayer/sandbox-executor:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8091
          name: http
        env:
        - name: PORT
          value: "8091"
        - name: DOCKER_HOST
          value: "tcp://localhost:2375"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8091
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8091
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: docker-socket
          mountPath: /var/run/docker.sock
        - name: workspace
          mountPath: /workspace
      - name: dind
        image: docker:24-dind
        securityContext:
          privileged: true
        env:
        - name: DOCKER_TLS_CERTDIR
          value: ""
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        volumeMounts:
        - name: docker-socket
          mountPath: /var/run/docker.sock
        - name: docker-storage
          mountPath: /var/lib/docker
      volumes:
      - name: docker-socket
        emptyDir: {}
      - name: docker-storage
        emptyDir: {}
      - name: workspace
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: sandbox-executor
  namespace: quantumlayer
  labels:
    app: sandbox-executor
spec:
  selector:
    app: sandbox-executor
  ports:
  - port: 8091
    targetPort: 8091
    name: http
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sandbox-executor
  namespace: quantumlayer

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sandbox-executor
  namespace: quantumlayer
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "pods/exec"]
  verbs: ["get", "list", "create", "delete", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "create", "delete", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sandbox-executor
  namespace: quantumlayer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sandbox-executor
subjects:
- kind: ServiceAccount
  name: sandbox-executor
  namespace: quantumlayer

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sandbox-executor-network-policy
  namespace: quantumlayer
spec:
  podSelector:
    matchLabels:
      app: sandbox-executor
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: quantumlayer
    ports:
    - protocol: TCP
      port: 8091
  egress:
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
  - to:
    - namespaceSelector:
        matchLabels:
          name: quantumlayer
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis