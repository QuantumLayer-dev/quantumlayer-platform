name: Build and Push to GHCR

on:
  push:
    branches: [main, develop]
    tags:
      - 'v*'
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ghcr.io/${{ github.repository_owner }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    strategy:
      matrix:
        service:
          - name: api
            context: ./apps/api
            dockerfile: Dockerfile
          - name: web
            context: ./apps/web
            dockerfile: Dockerfile
          - name: worker
            context: ./apps/worker
            dockerfile: Dockerfile
          - name: llm-router
            context: ./packages/llm-router
            dockerfile: Dockerfile
          - name: agent-orchestrator
            context: ./packages/agent-orchestrator
            dockerfile: Dockerfile
            
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_PREFIX }}/quantumlayer-${{ matrix.service.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.context }}/${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          
  deploy-to-k8s:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
          
      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
          
      - name: Update Kubernetes deployments
        run: |
          kubectl set image deployment/api api=${{ env.IMAGE_PREFIX }}/quantumlayer-api:${{ github.sha }} -n quantumlayer
          kubectl set image deployment/web web=${{ env.IMAGE_PREFIX }}/quantumlayer-web:${{ github.sha }} -n quantumlayer
          kubectl set image deployment/worker worker=${{ env.IMAGE_PREFIX }}/quantumlayer-worker:${{ github.sha }} -n quantumlayer
          kubectl set image deployment/llm-router llm-router=${{ env.IMAGE_PREFIX }}/quantumlayer-llm-router:${{ github.sha }} -n quantumlayer
          kubectl rollout status deployment/api -n quantumlayer
          kubectl rollout status deployment/web -n quantumlayer